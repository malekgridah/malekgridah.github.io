{"version":3,"sources":["webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["module.exports = \"<mat-sidenav-container class=\\\"h-100\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n       <!-- <form [formGroup]=\\\"form\\\"  (ngSubmit)=\\\"login()\\\" fxFlex=\\\"90\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\" class=\\\"mat-elevation-z6\\\"> -->\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\" class=\\\"mat-elevation-z6\\\">\\r\\n          <app-content-header\\r\\n                [icon]=\\\"'exit_to_app'\\\"\\r\\n                [title]=\\\"'Login'\\\"\\r\\n                [hideBreadcrumb]=\\\"true\\\"\\r\\n                [hasBgImage]=\\\"true\\\"\\r\\n                [class]=\\\"'py-4'\\\">\\r\\n            </app-content-header>\\r\\n            <div class=\\\"p-3\\\">\\r\\n                <!-- <a mat-button routerLink=\\\"/register\\\" color=\\\"accent\\\" class=\\\"w-100\\\">Não tens uma conta? Registe-se!</a> -->\\r\\n                <mat-form-field class=\\\"w-100\\\">\\r\\n                    <mat-icon matPrefix class=\\\"mat-icon-sm mb-2 mr-2 secondary-text-color\\\">E-mail</mat-icon>\\r\\n                    <input matInput placeholder=\\\"Email\\\" type=\\\"text\\\" formControlName=\\\"usuario\\\">\\r\\n                    <mat-error *ngIf=\\\"form.controls.usuario.errors?.required\\\">O email é obrigatório</mat-error>\\r\\n                    <mat-error *ngIf=\\\"form.controls.usuario.hasError('invalidEmail')\\\">Email invalido</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"w-100\\\">\\r\\n                    <!-- <mat-icon matPrefix class=\\\"mat-icon-sm mb-2 mr-2 secondary-text-color\\\">lock</mat-icon> -->\\r\\n                    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                    <input matInput placeholder=\\\"Senha\\\"  [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"senha\\\" >\\r\\n                    <mat-error *ngIf=\\\"form.controls.senha.errors?.required\\\">A senha é obrigatória</mat-error>\\r\\n                    <mat-error *ngIf=\\\"form.controls.senha.hasError('minlength')\\\">A senha deve conter no minimo 3 caracteres</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-slide-toggle formControlName=\\\"rememberMe\\\" class=\\\"my-2\\\">Lembra-me</mat-slide-toggle>\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mat-elevation-z6 w-100 mt-3\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Entrar</button>\\r\\n            </div>\\r\\n        </form>\\r\\n  </div>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport {AuthService} from \"../../core\";\r\nimport {filter} from \"rxjs/operators\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  public form:FormGroup;\r\n  public settings: Settings;\r\n  hide = true;\r\n  constructor(public appSettings:AppSettings, public fb: FormBuilder, public router:Router,\r\n             private auth: AuthService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'usuario': [null, Validators.compose([Validators.required])],\r\n      'senha': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'rememberMe': false\r\n    });\r\n  }\r\n\r\n  //  login(usuario: string, senha: string) {\r\n  //   const val = this.form.value;\r\n  //\r\n  //   if(this.form.valid) {\r\n  //   this.auth.login(val.usuario, val.senha);\r\n  //   this.router.navigate(['/']);\r\n  //   }\r\n  // }\r\n\r\n  //  login() {\r\n  //   const val = this.form.value;\r\n  //\r\n  //   if (this.form.valid) {\r\n  //     this.auth.login(val.usuario, val.senha)\r\n  //       .subscribe(\r\n  //          () => {\r\n  //            console.log(val.usuario);\r\n  //            this.router.navigate['/'];\r\n  //          }\r\n  //       )\r\n  //\r\n  //     //  this.form.reset();\r\n  //   }\r\n  // }\r\n\r\n  get email() {\r\n    return this.form.get('usuario');\r\n  }\r\n\r\n  get password() {\r\n    return this.form.get('senha');\r\n  }\r\n\r\n  public onSubmit(values:Object):void {\r\n    if (this.form.valid) {\r\n     this.auth.login(this.email.value, this.password.value)\r\n         .pipe(filter(authenticated => authenticated))\r\n          .subscribe(\r\n         () => this.router.navigateByUrl('/'),\r\n     )\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.settings.loadingSpinner = false; \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }"],"sourceRoot":""}